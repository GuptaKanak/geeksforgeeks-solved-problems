#problem link => https://practice.geeksforgeeks.org/problems/express-as-sum-of-power-of-natural-numbers/0/?category[]=Recursion&company[]=Amazon&company[]=Microsoft&company[]=Adobe&company[]=Samsung&company[]=Paytm&company[]=Goldman%20Sachs&company[]=MakeMyTrip&company[]=Google&company[]=Flipkart&company[]=Morgan%20Stanley&company[]=Walmart&company[]=D-E-Shaw&company[]=Ola%20Cabs&company[]=Directi&company[]=MAQ%20Software&company[]=Facebook&company[]=Apple&company[]=Swiggy&company[]=Zomato&problemType=full&page=1&sortBy=submissions&query=category[]Recursioncompany[]Amazoncompany[]Microsoftcompany[]Adobecompany[]Samsungcompany[]Paytmcompany[]Goldman%20Sachscompany[]MakeMyTripcompany[]Googlecompany[]Flipkartcompany[]Morgan%20Stanleycompany[]Walmartcompany[]D-E-Shawcompany[]Ola%20Cabscompany[]Directicompany[]MAQ%20Softwarecompany[]Facebookcompany[]Applecompany[]Swiggycompany[]ZomatoproblemTypefullpage1sortBysubmissions#
"""
Constraints:
1 <= T <= 100
1 <= X <= 103
1 <= N <= 5
"""

# find d raised to the power n
def power(d,n):
    if n==0:return 1
    if n%2==0:
        a=power(d,n//2)
        return a*a
    else:
        a=power(d,n//2)
        return a*a*d
# sum of power of natural nos    
def func(x,n,sum,d):
    # d=digit
    count=0
    #search for counts
    p=power(d,n)
    while x>sum+p:
        count+=func(x,n,sum+p,d+1)
        d+=1
        p=power(d,n)
    #when sum =x then return count+1 (over)
    if sum+p==x:count+=1
    return count
for _ in range(int(input())):
    x,n=list(map(int,input().split()))
    print(func(x,n,0,1))
